version: '3.2'
services:
  app: &app
    build:
      context: .
      dockerfile: docker/Dockerfile.app
      args:
        RUBY_VERSION: "2.6.6"
        PG_MAJOR: "12"
        NODE_MAJOR: "14"
        YARN_VERSION: "1.22.5"
        BUNDLER_VERSION: "2.0.2"
    image: chotto-jigsaw-app

  base: &base
    <<: *app
    stdin_open: true
    tty: true
    volumes:
      - .:/app:ro
      - app-var:/app-var
      - frontend-dist:/app/frontend/dist
      - frontend-node-modules:/app/frontend/node_modules
      - frontend-output:/app/frontend/output
      - frontend-spago:/app/frontend/.spago
      - rails-log:/app/rails/log
      - rails-tmp:/app/rails/tmp
    environment:
      BASE_URL: "${BASE_URL:-http://localhost:3000}"
      BOOTSNAP_CACHE_DIR: /app-var/bundle/bootsnap
      DB_HOST: db
      EDITOR: vim
      FIREBASE_CONFIG: ${FIREBASE_CONFIG}
      FIRESTORE_HOST: firestore
      FRONTEND_HOST: "${FRONTEND_HOST:-localhost:3000}"
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
      HISTFILE: /app-var/.bash_history
      NODE_ENV: ${NODE_ENV:-development}
      PSQL_HISTFILE: /app-var/.psql_history
      RAILS_ENV: ${RAILS_ENV:-development}
      REDIS_HOST: redis
      SEED_USERS: ${SEED_USERS}
      WEB_CONCURRENCY: 1
    working_dir: /app
    depends_on:
      - db
      - redis

  runner:
    <<: *base
    command: /bin/bash

  rails:
    <<: *base
    command: start-rails
    ports:
      - 3000

  worker:
    <<: *base
    command: bundle exec sidekiq -C config/sidekiq.yml
    working_dir: /app/rails

  livereload:
    <<: *base
    command: guard --no-interactions --plugin LiveReload
    working_dir: /app/rails
    ports:
      - 35729:35729

  frontend-dev:
    <<: *base
    command: >
      bash -c "
      yarn install
      && yarn dev --color --public $$FRONTEND_HOST
      "
    working_dir: /app/frontend
    ports:
      - 8080

  entrance-dev:
    image: nginx:stable-alpine
    command: >
      /bin/sh -c "
      envsubst '$$FRONTEND_HOST' < /root/proxy.conf > /etc/nginx/conf.d/proxy.conf
      && cat /etc/nginx/conf.d/proxy.conf
      && nginx -g 'daemon off;'
      "
    volumes:
      - ./entrance/proxy-dev.conf:/root/proxy.conf:ro
    environment:
      FRONTEND_HOST: ${FRONTEND_HOST:-localhost:3000}
    ports:
      - "${APP_HTTP_PORT:-3000}:3000"
    depends_on:
      - rails
      - frontend-dev

  db:
    image: postgres:12.1-alpine
    volumes:
      - db-log:/root/log:cached
      - postgres:/var/lib/postgresql/data
    environment:
      PSQL_HISTFILE: /app-var/.psql_history
    ports:
      - 5432

  redis:
    image: redis:5.0-alpine
    volumes:
      - redis:/data
    ports:
      - 6379

  firestore:
    image: kayhide/firestore-emulator:latest
    ports:
      - 8080


volumes:
  app-var:
  db-log:
  frontend-dist:
  frontend-node-modules:
  frontend-output:
  frontend-spago:
  postgres:
  rails-log:
  rails-tmp:
  redis:
