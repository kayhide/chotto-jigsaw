version: '3.2'
services:
  app: &app
    build:
      context: .
      dockerfile: docker/Dockerfile.app
      args:
        RUBY_VERSION: "2.6.6"
        PG_MAJOR: "12"
        NODE_MAJOR: "14"
        YARN_VERSION: "1.22.5"
        BUNDLER_VERSION: "2.0.2"
    image: chotto-jigsaw-app

  backend: &backend
    <<: *app
    stdin_open: true
    tty: true
    volumes:
      - .:/app:cached
      - bundle:/bundle
    environment:
      BOOTSNAP_CACHE_DIR: /bundle/bootsnap
      BASE_URL: ${BASE_URL}
      DB_HOST: db
      EDITOR: vim
      HISTFILE: /app/log/.bash_history
      NODE_ENV: development
      PSQL_HISTFILE: /app/log/.psql_history
      RAILS_ENV: ${RAILS_ENV:-development}
      RAILS_HOST: rails
      REDIS_HOST: redis
      WEBPACKER_DEV_SERVER_HOST: webpacker
      WEB_CONCURRENCY: 1
      FIREBASE_CONFIG: ${FIREBASE_CONFIG}
      FIRESTORE_HOST: firestore
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
      SEED_USERS: ${SEED_USERS}
    depends_on:
      - db
      - redis

  runner:
    <<: *backend
    command: /bin/bash

  rails:
    <<: *backend
    command: start-rails
    ports:
      - 3000

  worker:
    <<: *backend
    command: sidekiq -C config/sidekiq.yml
    working_dir: /app/rails

  livereload:
    <<: *backend
    command: guard --no-interactions --plugin LiveReload
    working_dir: /app/rails
    ports:
      - 35729:35729

  entrance-dev:
    image: nginx:stable-alpine
    command: >
        /bin/sh -c
        "envsubst '$$FRONTEND_HOST' < /root/proxy.conf > /etc/nginx/conf.d/proxy.conf
        && cat /etc/nginx/conf.d/proxy.conf
        && nginx -g 'daemon off;'"
    volumes:
      - ./entrance/proxy-dev.conf:/root/proxy.conf:ro
    environment:
      FRONTEND_HOST: ${FRONTEND_HOST:-localhost:3000}
    ports:
      - "${APP_HTTP_PORT:-3000}:3000"
    depends_on:
      - rails
      - frontend-dev

  db:
    image: postgres:12.1-alpine
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      PSQL_HISTFILE: /root/log/.psql_history
    ports:
      - 5432

  redis:
    image: redis:5.0-alpine
    volumes:
      - redis:/data
    ports:
      - 6379

  firestore:
    image: kayhide/firestore-emulator:latest
    ports:
      - 8080

  frontend-dev:
    <<: *app
    command: "bash -c 'yarn install && yarn dev --color --public ${FRONTEND_HOST:-localhost:3000}'"
    working_dir: /app/frontend
    ports:
      - 8080
    volumes:
      - .:/app:cached
      - bundle:/bundle
    environment:
      FRONTEND_HOST: "${FRONTEND_HOST:-localhost:3000}"
      BASE_URL: "${BASE_URL:-http://localhost:3000}"
      FIREBASE_CONFIG: ${FIREBASE_CONFIG}
      NODE_ENV: ${NODE_ENV:-development}
      RAILS_ENV: ${RAILS_ENV:-development}
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0

volumes:
  bundle:
  postgres:
  redis:
