- width, height = @puzzle.picture.metadata.values_at("width", "height")
- longer = [width, height].max
- aspect_ratio = width.to_f / height.to_f
- display_scale = 600.0 / longer.to_f
- display_width = (width * display_scale).floor
- display_height = (height * display_scale).floor

.row
  .col-12.col-lg-6.order-lg-12
    dl.row.rounded.p-2 class="glassy-#{@puzzle.difficulty}"
      dt.col-4 Difficulty
      dd.col-8 = @puzzle.difficulty.to_s.camelize
      dt.col-4 Name
      dd.col-8 = @puzzle.picture.filename
      dt.col-4 Pieces Count
      dd.col-8 = "#{@puzzle.pieces_count} pcs"
      dt.col-4 Size
      dd.col-8 = "#{width} x #{height}"
      dt.col-4 Aspect Ratio
      dd.col-8 = "%0.2f" % aspect_ratio
  .col-12.col-lg-6
    .d-flex
      .border.rounded.glassy-light.p-2.mx-auto
        .puzzle-show
          = image_tag @puzzle.picture.variant(resize_to_limit: [600, 600])
          canvas id=dom_id(@puzzle, :canvas) width=display_width height=display_height

.fixed-bottom.m-3
  = link_to @picture, class: %w(btn btn-outline-light glassy) do
    i.fas.fa-chevron-left.fa-fw


ruby:
  instructions = @puzzle.pieces.map { |p|
    head, *tail = p.points
    [
      ['beginPath', ''],
      ['moveTo', head.join(',')],
      *tail.each_slice(3).map { |pts|
        [pts.all? ? 'bezierCurveTo' : 'lineTo', pts.compact.join(',')]
      },
      ['closePath', ''],
      ['stroke', ''],
    ]
  }.inject(:+)

javascript:
  var canvas = document.getElementById('#{dom_id @puzzle, :canvas}');
  var ctx = canvas.getContext('2d');
  ctx.scale(#{display_scale}, #{display_scale});

  ctx.strokeStyle = "hsla(0deg, 0%, 50%, 0.5)";
  ctx.lineWidth = 4 / #{display_scale};
  #{raw instructions.map { |m, args| "ctx.#{m}(#{args})" }.join(';') }

  ctx.strokeStyle = "hsla(0deg, 0%, 90%, 0.8)";
  ctx.lineWidth = 1 / #{display_scale};
  #{raw instructions.map { |m, args| "ctx.#{m}(#{args})" }.join(';') }
